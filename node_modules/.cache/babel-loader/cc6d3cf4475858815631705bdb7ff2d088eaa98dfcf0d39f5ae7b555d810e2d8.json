{"ast":null,"code":"var _jsxFileName = \"D:\\\\web_project\\\\anusmo\\\\src\\\\component\\\\TodoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport firebase from '../utils/firebase';\nimport Todo from './Todo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TodoList() {\n  _s();\n  const [todoList, setTodoList] = useState();\n  useEffect(() => {\n    const todoRef = firebase.database().ref('Todo');\n    // listen every time data change in todo ref\n    todoRef.on('value', snapshot => {\n      const todos = snapshot.val();\n      const todoList = [];\n      for (let id in todos) {\n        todoList.push({\n          id,\n          ...todos[id]\n        });\n      }\n      setTodoList(todoList);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: todoList ? todoList.map((todo, index) => /*#__PURE__*/_jsxDEV(Todo, {\n      todo: todo\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 41\n    }, this)) : ''\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"dRGEV8peSUa5n03OZbSek5VlW6w=\");\n_c = TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","useEffect","firebase","Todo","jsxDEV","_jsxDEV","TodoList","_s","todoList","setTodoList","todoRef","database","ref","on","snapshot","todos","val","id","push","children","map","todo","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/web_project/anusmo/src/component/TodoList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport firebase from '../utils/firebase';\r\nimport Todo from './Todo';\r\n\r\nexport default function TodoList() {\r\n  const [todoList, setTodoList] = useState();\r\n\r\n  useEffect(() => {\r\n    const todoRef = firebase.database().ref('Todo');\r\n    // listen every time data change in todo ref\r\n    todoRef.on('value', (snapshot) => {\r\n      const todos = snapshot.val();\r\n      const todoList = [];\r\n      for (let id in todos) {\r\n        todoList.push({ id, ...todos[id] });\r\n      }\r\n      setTodoList(todoList);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {todoList\r\n        ? todoList.map((todo, index) => <Todo todo={todo} key={index} />)\r\n        : ''}\r\n    </div>\r\n  );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd,MAAMS,OAAO,GAAGR,QAAQ,CAACS,QAAQ,CAAC,CAAC,CAACC,GAAG,CAAC,MAAM,CAAC;IAC/C;IACAF,OAAO,CAACG,EAAE,CAAC,OAAO,EAAGC,QAAQ,IAAK;MAChC,MAAMC,KAAK,GAAGD,QAAQ,CAACE,GAAG,CAAC,CAAC;MAC5B,MAAMR,QAAQ,GAAG,EAAE;MACnB,KAAK,IAAIS,EAAE,IAAIF,KAAK,EAAE;QACpBP,QAAQ,CAACU,IAAI,CAAC;UAAED,EAAE;UAAE,GAAGF,KAAK,CAACE,EAAE;QAAE,CAAC,CAAC;MACrC;MACAR,WAAW,CAACD,QAAQ,CAAC;IACvB,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEH,OAAA;IAAAc,QAAA,EACGX,QAAQ,GACLA,QAAQ,CAACY,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAAKjB,OAAA,CAACF,IAAI;MAACkB,IAAI,EAAEA;IAAK,GAAMC,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC,GAC/D;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACnB,EAAA,CAvBuBD,QAAQ;AAAAqB,EAAA,GAARrB,QAAQ;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}