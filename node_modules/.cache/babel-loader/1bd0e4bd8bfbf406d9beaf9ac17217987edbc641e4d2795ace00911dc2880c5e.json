{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ReadConcern = exports.ReadConcernLevel = void 0;\n/** @public */\nexports.ReadConcernLevel = Object.freeze({\n  local: 'local',\n  majority: 'majority',\n  linearizable: 'linearizable',\n  available: 'available',\n  snapshot: 'snapshot'\n});\n/**\n * The MongoDB ReadConcern, which allows for control of the consistency and isolation properties\n * of the data read from replica sets and replica set shards.\n * @public\n *\n * @see https://www.mongodb.com/docs/manual/reference/read-concern/index.html\n */\nclass ReadConcern {\n  /** Constructs a ReadConcern from the read concern level.*/\n  constructor(level) {\n    /**\n     * A spec test exists that allows level to be any string.\n     * \"invalid readConcern with out stage\"\n     * @see ./test/spec/crud/v2/aggregate-out-readConcern.json\n     * @see https://github.com/mongodb/specifications/blob/master/source/read-write-concern/read-write-concern.rst#unknown-levels-and-additional-options-for-string-based-readconcerns\n     */\n    this.level = exports.ReadConcernLevel[level] ?? level;\n  }\n  /**\n   * Construct a ReadConcern given an options object.\n   *\n   * @param options - The options object from which to extract the write concern.\n   */\n  static fromOptions(options) {\n    if (options == null) {\n      return;\n    }\n    if (options.readConcern) {\n      const {\n        readConcern\n      } = options;\n      if (readConcern instanceof ReadConcern) {\n        return readConcern;\n      } else if (typeof readConcern === 'string') {\n        return new ReadConcern(readConcern);\n      } else if ('level' in readConcern && readConcern.level) {\n        return new ReadConcern(readConcern.level);\n      }\n    }\n    if (options.level) {\n      return new ReadConcern(options.level);\n    }\n    return;\n  }\n  static get MAJORITY() {\n    return exports.ReadConcernLevel.majority;\n  }\n  static get AVAILABLE() {\n    return exports.ReadConcernLevel.available;\n  }\n  static get LINEARIZABLE() {\n    return exports.ReadConcernLevel.linearizable;\n  }\n  static get SNAPSHOT() {\n    return exports.ReadConcernLevel.snapshot;\n  }\n  toJSON() {\n    return {\n      level: this.level\n    };\n  }\n}\nexports.ReadConcern = ReadConcern;","map":{"version":3,"names":["Object","defineProperty","exports","value","ReadConcern","ReadConcernLevel","freeze","local","majority","linearizable","available","snapshot","constructor","level","fromOptions","options","readConcern","MAJORITY","AVAILABLE","LINEARIZABLE","SNAPSHOT","toJSON"],"sources":["D:/web_project/node_modules/mongodb/lib/read_concern.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ReadConcern = exports.ReadConcernLevel = void 0;\n/** @public */\nexports.ReadConcernLevel = Object.freeze({\n    local: 'local',\n    majority: 'majority',\n    linearizable: 'linearizable',\n    available: 'available',\n    snapshot: 'snapshot'\n});\n/**\n * The MongoDB ReadConcern, which allows for control of the consistency and isolation properties\n * of the data read from replica sets and replica set shards.\n * @public\n *\n * @see https://www.mongodb.com/docs/manual/reference/read-concern/index.html\n */\nclass ReadConcern {\n    /** Constructs a ReadConcern from the read concern level.*/\n    constructor(level) {\n        /**\n         * A spec test exists that allows level to be any string.\n         * \"invalid readConcern with out stage\"\n         * @see ./test/spec/crud/v2/aggregate-out-readConcern.json\n         * @see https://github.com/mongodb/specifications/blob/master/source/read-write-concern/read-write-concern.rst#unknown-levels-and-additional-options-for-string-based-readconcerns\n         */\n        this.level = exports.ReadConcernLevel[level] ?? level;\n    }\n    /**\n     * Construct a ReadConcern given an options object.\n     *\n     * @param options - The options object from which to extract the write concern.\n     */\n    static fromOptions(options) {\n        if (options == null) {\n            return;\n        }\n        if (options.readConcern) {\n            const { readConcern } = options;\n            if (readConcern instanceof ReadConcern) {\n                return readConcern;\n            }\n            else if (typeof readConcern === 'string') {\n                return new ReadConcern(readConcern);\n            }\n            else if ('level' in readConcern && readConcern.level) {\n                return new ReadConcern(readConcern.level);\n            }\n        }\n        if (options.level) {\n            return new ReadConcern(options.level);\n        }\n        return;\n    }\n    static get MAJORITY() {\n        return exports.ReadConcernLevel.majority;\n    }\n    static get AVAILABLE() {\n        return exports.ReadConcernLevel.available;\n    }\n    static get LINEARIZABLE() {\n        return exports.ReadConcernLevel.linearizable;\n    }\n    static get SNAPSHOT() {\n        return exports.ReadConcernLevel.snapshot;\n    }\n    toJSON() {\n        return { level: this.level };\n    }\n}\nexports.ReadConcern = ReadConcern;\n//# sourceMappingURL=read_concern.js.map"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,WAAW,GAAGF,OAAO,CAACG,gBAAgB,GAAG,KAAK,CAAC;AACvD;AACAH,OAAO,CAACG,gBAAgB,GAAGL,MAAM,CAACM,MAAM,CAAC;EACrCC,KAAK,EAAE,OAAO;EACdC,QAAQ,EAAE,UAAU;EACpBC,YAAY,EAAE,cAAc;EAC5BC,SAAS,EAAE,WAAW;EACtBC,QAAQ,EAAE;AACd,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMP,WAAW,CAAC;EACd;EACAQ,WAAWA,CAACC,KAAK,EAAE;IACf;AACR;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACA,KAAK,GAAGX,OAAO,CAACG,gBAAgB,CAACQ,KAAK,CAAC,IAAIA,KAAK;EACzD;EACA;AACJ;AACA;AACA;AACA;EACI,OAAOC,WAAWA,CAACC,OAAO,EAAE;IACxB,IAAIA,OAAO,IAAI,IAAI,EAAE;MACjB;IACJ;IACA,IAAIA,OAAO,CAACC,WAAW,EAAE;MACrB,MAAM;QAAEA;MAAY,CAAC,GAAGD,OAAO;MAC/B,IAAIC,WAAW,YAAYZ,WAAW,EAAE;QACpC,OAAOY,WAAW;MACtB,CAAC,MACI,IAAI,OAAOA,WAAW,KAAK,QAAQ,EAAE;QACtC,OAAO,IAAIZ,WAAW,CAACY,WAAW,CAAC;MACvC,CAAC,MACI,IAAI,OAAO,IAAIA,WAAW,IAAIA,WAAW,CAACH,KAAK,EAAE;QAClD,OAAO,IAAIT,WAAW,CAACY,WAAW,CAACH,KAAK,CAAC;MAC7C;IACJ;IACA,IAAIE,OAAO,CAACF,KAAK,EAAE;MACf,OAAO,IAAIT,WAAW,CAACW,OAAO,CAACF,KAAK,CAAC;IACzC;IACA;EACJ;EACA,WAAWI,QAAQA,CAAA,EAAG;IAClB,OAAOf,OAAO,CAACG,gBAAgB,CAACG,QAAQ;EAC5C;EACA,WAAWU,SAASA,CAAA,EAAG;IACnB,OAAOhB,OAAO,CAACG,gBAAgB,CAACK,SAAS;EAC7C;EACA,WAAWS,YAAYA,CAAA,EAAG;IACtB,OAAOjB,OAAO,CAACG,gBAAgB,CAACI,YAAY;EAChD;EACA,WAAWW,QAAQA,CAAA,EAAG;IAClB,OAAOlB,OAAO,CAACG,gBAAgB,CAACM,QAAQ;EAC5C;EACAU,MAAMA,CAAA,EAAG;IACL,OAAO;MAAER,KAAK,EAAE,IAAI,CAACA;IAAM,CAAC;EAChC;AACJ;AACAX,OAAO,CAACE,WAAW,GAAGA,WAAW","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}