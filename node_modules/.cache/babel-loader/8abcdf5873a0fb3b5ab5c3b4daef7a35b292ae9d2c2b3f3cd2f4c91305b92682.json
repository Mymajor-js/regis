{"ast":null,"code":"var _jsxFileName = \"D:\\\\web_project\\\\anusmo\\\\src\\\\component\\\\text_animation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MorphingText = () => {\n  _s();\n  const texts = [\"Why\", \"is\", \"this\", \"so\", \"satisfying\", \"to\", \"watch?\"];\n  const [textIndex, setTextIndex] = useState(texts.length - 1);\n  const [morph, setMorph] = useState(0);\n  const [cooldown, setCooldown] = useState(0.25);\n  const [time, setTime] = useState(new Date());\n  const doMorph = () => {\n    setMorph(prevMorph => prevMorph - cooldown);\n    setCooldown(0);\n    let fraction = morph / 1; // morphTime is set to 1 in the original code\n\n    if (fraction > 1) {\n      setCooldown(0.25); // cooldownTime is set to 0.25 in the original code\n      fraction = 1;\n    }\n    setMorph(fraction);\n  };\n  const setMorphStyle = fraction => {\n    const text1 = document.getElementById(\"text1\");\n    const text2 = document.getElementById(\"text2\");\n    text2.style.filter = `blur(${Math.min(8 / fraction - 8, 100)}px)`;\n    text2.style.opacity = `${Math.pow(fraction, 0.4) * 100}%`;\n    fraction = 1 - fraction;\n    text1.style.filter = `blur(${Math.min(8 / fraction - 8, 100)}px)`;\n    text1.style.opacity = `${Math.pow(fraction, 0.4) * 100}%`;\n    setTextIndex(prevTextIndex => prevTextIndex + 1);\n  };\n  const doCooldown = () => {\n    setMorph(0);\n    setTextIndex(prevTextIndex => prevTextIndex + 1);\n  };\n  useEffect(() => {\n    const animate = () => {\n      requestAnimationFrame(animate);\n      let newTime = new Date();\n      let shouldIncrementIndex = cooldown > 0;\n      let dt = (newTime - time) / 1000;\n      setTime(newTime);\n      setCooldown(prevCooldown => prevCooldown - dt);\n      if (cooldown <= 0) {\n        if (shouldIncrementIndex) {\n          setTextIndex(prevTextIndex => prevTextIndex + 1);\n        }\n        doMorph();\n      } else {\n        doCooldown();\n      }\n    };\n    animate();\n  }, [cooldown, morph, textIndex, time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"text1\",\n      children: texts[textIndex % texts.length]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"text2\",\n      children: texts[(textIndex + 1) % texts.length]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(MorphingText, \"3XgN+RPEFSBzht6g/GmdK18ON5Q=\");\n_c = MorphingText;\nexport default MorphingText;\nvar _c;\n$RefreshReg$(_c, \"MorphingText\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MorphingText","_s","texts","textIndex","setTextIndex","length","morph","setMorph","cooldown","setCooldown","time","setTime","Date","doMorph","prevMorph","fraction","setMorphStyle","text1","document","getElementById","text2","style","filter","Math","min","opacity","pow","prevTextIndex","doCooldown","animate","requestAnimationFrame","newTime","shouldIncrementIndex","dt","prevCooldown","children","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/web_project/anusmo/src/component/text_animation.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst MorphingText = () => {\r\n  const texts = [\r\n    \"Why\",\r\n    \"is\",\r\n    \"this\",\r\n    \"so\",\r\n    \"satisfying\",\r\n    \"to\",\r\n    \"watch?\"\r\n  ];\r\n  \r\n  const [textIndex, setTextIndex] = useState(texts.length - 1);\r\n  const [morph, setMorph] = useState(0);\r\n  const [cooldown, setCooldown] = useState(0.25);\r\n  const [time, setTime] = useState(new Date());\r\n\r\n  const doMorph = () => {\r\n    setMorph(prevMorph => prevMorph - cooldown);\r\n    setCooldown(0);\r\n\r\n    let fraction = morph / 1; // morphTime is set to 1 in the original code\r\n\r\n    if (fraction > 1) {\r\n      setCooldown(0.25); // cooldownTime is set to 0.25 in the original code\r\n      fraction = 1;\r\n    }\r\n\r\n    setMorph(fraction);\r\n  };\r\n\r\n  const setMorphStyle = (fraction) => {\r\n    const text1 = document.getElementById(\"text1\");\r\n    const text2 = document.getElementById(\"text2\");\r\n\r\n    text2.style.filter = `blur(${Math.min(8 / fraction - 8, 100)}px)`;\r\n    text2.style.opacity = `${Math.pow(fraction, 0.4) * 100}%`;\r\n\r\n    fraction = 1 - fraction;\r\n    text1.style.filter = `blur(${Math.min(8 / fraction - 8, 100)}px)`;\r\n    text1.style.opacity = `${Math.pow(fraction, 0.4) * 100}%`;\r\n\r\n    setTextIndex(prevTextIndex => prevTextIndex + 1);\r\n  };\r\n\r\n  const doCooldown = () => {\r\n    setMorph(0);\r\n    setTextIndex(prevTextIndex => prevTextIndex + 1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n\r\n      let newTime = new Date();\r\n      let shouldIncrementIndex = cooldown > 0;\r\n      let dt = (newTime - time) / 1000;\r\n      setTime(newTime);\r\n\r\n      setCooldown(prevCooldown => prevCooldown - dt);\r\n\r\n      if (cooldown <= 0) {\r\n        if (shouldIncrementIndex) {\r\n          setTextIndex(prevTextIndex => prevTextIndex + 1);\r\n        }\r\n\r\n        doMorph();\r\n      } else {\r\n        doCooldown();\r\n      }\r\n    };\r\n\r\n    animate();\r\n  }, [cooldown, morph, textIndex, time]);\r\n\r\n  return (\r\n    <div>\r\n      <p id=\"text1\">{texts[textIndex % texts.length]}</p>\r\n      <p id=\"text2\">{texts[(textIndex + 1) % texts.length]}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MorphingText;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}