{"ast":null,"code":"'use strict';\n\nconst MongooseError = require('../../error/mongooseError');\nconst getDiscriminatorByValue = require('../../helpers/discriminator/getDiscriminatorByValue');\nconst applyTimestampsToChildren = require('../update/applyTimestampsToChildren');\nconst applyTimestampsToUpdate = require('../update/applyTimestampsToUpdate');\nconst cast = require('../../cast');\nconst castUpdate = require('../query/castUpdate');\nconst clone = require('../clone');\nconst decorateUpdateWithVersionKey = require('../update/decorateUpdateWithVersionKey');\nconst {\n  inspect\n} = require('util');\nconst setDefaultsOnInsert = require('../setDefaultsOnInsert');\n\n/**\n * Given a model and a bulkWrite op, return a thunk that handles casting and\n * validating the individual op.\n * @param {Model} originalModel\n * @param {Object} op\n * @param {Object} [options]\n * @api private\n */\n\nmodule.exports = function castBulkWrite(originalModel, op, options) {\n  const now = originalModel.base.now();\n  const globalSetDefaultsOnInsert = originalModel.base.options.setDefaultsOnInsert;\n  if (op['insertOne']) {\n    return callback => {\n      const model = decideModelByObject(originalModel, op['insertOne']['document']);\n      const doc = new model(op['insertOne']['document']);\n      if (model.schema.options.timestamps && options.timestamps !== false) {\n        doc.initializeTimestamps();\n      }\n      if (options.session != null) {\n        doc.$session(options.session);\n      }\n      const versionKey = model?.schema?.options?.versionKey;\n      if (versionKey && doc[versionKey] == null) {\n        doc[versionKey] = 0;\n      }\n      op['insertOne']['document'] = doc;\n      if (options.skipValidation || op['insertOne'].skipValidation) {\n        callback(null);\n        return;\n      }\n      op['insertOne']['document'].$validate().then(() => {\n        callback(null);\n      }, err => {\n        callback(err, null);\n      });\n    };\n  } else if (op['updateOne']) {\n    return callback => {\n      try {\n        if (!op['updateOne']['filter']) {\n          throw new Error('Must provide a filter object.');\n        }\n        if (!op['updateOne']['update']) {\n          throw new Error('Must provide an update object.');\n        }\n        const model = decideModelByObject(originalModel, op['updateOne']['filter']);\n        const schema = model.schema;\n        const strict = options.strict != null ? options.strict : model.schema.options.strict;\n        const update = clone(op['updateOne']['update']);\n        _addDiscriminatorToObject(schema, op['updateOne']['filter']);\n        if (model.schema.$timestamps != null && op['updateOne'].timestamps !== false) {\n          const createdAt = model.schema.$timestamps.createdAt;\n          const updatedAt = model.schema.$timestamps.updatedAt;\n          applyTimestampsToUpdate(now, createdAt, updatedAt, update, {});\n        }\n        if (op['updateOne'].timestamps !== false) {\n          applyTimestampsToChildren(now, update, model.schema);\n        }\n        const shouldSetDefaultsOnInsert = op['updateOne'].setDefaultsOnInsert == null ? globalSetDefaultsOnInsert : op['updateOne'].setDefaultsOnInsert;\n        if (shouldSetDefaultsOnInsert !== false) {\n          setDefaultsOnInsert(op['updateOne']['filter'], model.schema, update, {\n            setDefaultsOnInsert: true,\n            upsert: op['updateOne'].upsert\n          });\n        }\n        decorateUpdateWithVersionKey(update, op['updateOne'], model.schema.options.versionKey);\n        op['updateOne']['filter'] = cast(model.schema, op['updateOne']['filter'], {\n          strict: strict,\n          upsert: op['updateOne'].upsert\n        });\n        op['updateOne']['update'] = castUpdate(model.schema, update, {\n          strict: strict,\n          upsert: op['updateOne'].upsert\n        }, model, op['updateOne']['filter']);\n      } catch (error) {\n        return callback(error, null);\n      }\n      callback(null);\n    };\n  } else if (op['updateMany']) {\n    return callback => {\n      try {\n        if (!op['updateMany']['filter']) {\n          throw new Error('Must provide a filter object.');\n        }\n        if (!op['updateMany']['update']) {\n          throw new Error('Must provide an update object.');\n        }\n        const model = decideModelByObject(originalModel, op['updateMany']['filter']);\n        const schema = model.schema;\n        const strict = options.strict != null ? options.strict : model.schema.options.strict;\n        const shouldSetDefaultsOnInsert = op['updateMany'].setDefaultsOnInsert == null ? globalSetDefaultsOnInsert : op['updateMany'].setDefaultsOnInsert;\n        if (shouldSetDefaultsOnInsert !== false) {\n          setDefaultsOnInsert(op['updateMany']['filter'], model.schema, op['updateMany']['update'], {\n            setDefaultsOnInsert: true,\n            upsert: op['updateMany'].upsert\n          });\n        }\n        if (model.schema.$timestamps != null && op['updateMany'].timestamps !== false) {\n          const createdAt = model.schema.$timestamps.createdAt;\n          const updatedAt = model.schema.$timestamps.updatedAt;\n          applyTimestampsToUpdate(now, createdAt, updatedAt, op['updateMany']['update'], {});\n        }\n        if (op['updateMany'].timestamps !== false) {\n          applyTimestampsToChildren(now, op['updateMany']['update'], model.schema);\n        }\n        _addDiscriminatorToObject(schema, op['updateMany']['filter']);\n        decorateUpdateWithVersionKey(op['updateMany']['update'], op['updateMany'], model.schema.options.versionKey);\n        op['updateMany']['filter'] = cast(model.schema, op['updateMany']['filter'], {\n          strict: strict,\n          upsert: op['updateMany'].upsert\n        });\n        op['updateMany']['update'] = castUpdate(model.schema, op['updateMany']['update'], {\n          strict: strict,\n          upsert: op['updateMany'].upsert\n        }, model, op['updateMany']['filter']);\n      } catch (error) {\n        return callback(error, null);\n      }\n      callback(null);\n    };\n  } else if (op['replaceOne']) {\n    return callback => {\n      const model = decideModelByObject(originalModel, op['replaceOne']['filter']);\n      const schema = model.schema;\n      const strict = options.strict != null ? options.strict : model.schema.options.strict;\n      _addDiscriminatorToObject(schema, op['replaceOne']['filter']);\n      try {\n        op['replaceOne']['filter'] = cast(model.schema, op['replaceOne']['filter'], {\n          strict: strict,\n          upsert: op['replaceOne'].upsert\n        });\n      } catch (error) {\n        return callback(error, null);\n      }\n\n      // set `skipId`, otherwise we get \"_id field cannot be changed\"\n      const doc = new model(op['replaceOne']['replacement'], strict, true);\n      if (model.schema.options.timestamps) {\n        doc.initializeTimestamps();\n      }\n      if (options.session != null) {\n        doc.$session(options.session);\n      }\n      const versionKey = model?.schema?.options?.versionKey;\n      if (versionKey && doc[versionKey] == null) {\n        doc[versionKey] = 0;\n      }\n      op['replaceOne']['replacement'] = doc;\n      if (options.skipValidation || op['replaceOne'].skipValidation) {\n        op['replaceOne']['replacement'] = op['replaceOne']['replacement'].toBSON();\n        callback(null);\n        return;\n      }\n      op['replaceOne']['replacement'].$validate().then(() => {\n        op['replaceOne']['replacement'] = op['replaceOne']['replacement'].toBSON();\n        callback(null);\n      }, error => {\n        callback(error, null);\n      });\n    };\n  } else if (op['deleteOne']) {\n    return callback => {\n      const model = decideModelByObject(originalModel, op['deleteOne']['filter']);\n      const schema = model.schema;\n      _addDiscriminatorToObject(schema, op['deleteOne']['filter']);\n      try {\n        op['deleteOne']['filter'] = cast(model.schema, op['deleteOne']['filter']);\n      } catch (error) {\n        return callback(error, null);\n      }\n      callback(null);\n    };\n  } else if (op['deleteMany']) {\n    return callback => {\n      const model = decideModelByObject(originalModel, op['deleteMany']['filter']);\n      const schema = model.schema;\n      _addDiscriminatorToObject(schema, op['deleteMany']['filter']);\n      try {\n        op['deleteMany']['filter'] = cast(model.schema, op['deleteMany']['filter']);\n      } catch (error) {\n        return callback(error, null);\n      }\n      callback(null);\n    };\n  } else {\n    return callback => {\n      const error = new MongooseError(`Invalid op passed to \\`bulkWrite()\\`: ${inspect(op)}`);\n      callback(error, null);\n    };\n  }\n};\nfunction _addDiscriminatorToObject(schema, obj) {\n  if (schema == null) {\n    return;\n  }\n  if (schema.discriminatorMapping && !schema.discriminatorMapping.isRoot) {\n    obj[schema.discriminatorMapping.key] = schema.discriminatorMapping.value;\n  }\n}\n\n/**\n * gets discriminator model if discriminator key is present in object\n * @api private\n */\n\nfunction decideModelByObject(model, object) {\n  const discriminatorKey = model.schema.options.discriminatorKey;\n  if (object != null && object.hasOwnProperty(discriminatorKey)) {\n    model = getDiscriminatorByValue(model.discriminators, object[discriminatorKey]) || model;\n  }\n  return model;\n}","map":{"version":3,"names":["MongooseError","require","getDiscriminatorByValue","applyTimestampsToChildren","applyTimestampsToUpdate","cast","castUpdate","clone","decorateUpdateWithVersionKey","inspect","setDefaultsOnInsert","module","exports","castBulkWrite","originalModel","op","options","now","base","globalSetDefaultsOnInsert","callback","model","decideModelByObject","doc","schema","timestamps","initializeTimestamps","session","$session","versionKey","skipValidation","$validate","then","err","Error","strict","update","_addDiscriminatorToObject","$timestamps","createdAt","updatedAt","shouldSetDefaultsOnInsert","upsert","error","toBSON","obj","discriminatorMapping","isRoot","key","value","object","discriminatorKey","hasOwnProperty","discriminators"],"sources":["D:/web_project/node_modules/mongoose/lib/helpers/model/castBulkWrite.js"],"sourcesContent":["'use strict';\n\nconst MongooseError = require('../../error/mongooseError');\nconst getDiscriminatorByValue = require('../../helpers/discriminator/getDiscriminatorByValue');\nconst applyTimestampsToChildren = require('../update/applyTimestampsToChildren');\nconst applyTimestampsToUpdate = require('../update/applyTimestampsToUpdate');\nconst cast = require('../../cast');\nconst castUpdate = require('../query/castUpdate');\nconst clone = require('../clone');\nconst decorateUpdateWithVersionKey = require('../update/decorateUpdateWithVersionKey');\nconst { inspect } = require('util');\nconst setDefaultsOnInsert = require('../setDefaultsOnInsert');\n\n/**\n * Given a model and a bulkWrite op, return a thunk that handles casting and\n * validating the individual op.\n * @param {Model} originalModel\n * @param {Object} op\n * @param {Object} [options]\n * @api private\n */\n\nmodule.exports = function castBulkWrite(originalModel, op, options) {\n  const now = originalModel.base.now();\n\n  const globalSetDefaultsOnInsert = originalModel.base.options.setDefaultsOnInsert;\n  if (op['insertOne']) {\n    return (callback) => {\n      const model = decideModelByObject(originalModel, op['insertOne']['document']);\n\n      const doc = new model(op['insertOne']['document']);\n      if (model.schema.options.timestamps && options.timestamps !== false) {\n        doc.initializeTimestamps();\n      }\n      if (options.session != null) {\n        doc.$session(options.session);\n      }\n      const versionKey = model?.schema?.options?.versionKey;\n      if (versionKey && doc[versionKey] == null) {\n        doc[versionKey] = 0;\n      }\n      op['insertOne']['document'] = doc;\n\n      if (options.skipValidation || op['insertOne'].skipValidation) {\n        callback(null);\n        return;\n      }\n\n      op['insertOne']['document'].$validate().then(\n        () => { callback(null); },\n        err => { callback(err, null); }\n      );\n    };\n  } else if (op['updateOne']) {\n    return (callback) => {\n      try {\n        if (!op['updateOne']['filter']) {\n          throw new Error('Must provide a filter object.');\n        }\n        if (!op['updateOne']['update']) {\n          throw new Error('Must provide an update object.');\n        }\n\n        const model = decideModelByObject(originalModel, op['updateOne']['filter']);\n        const schema = model.schema;\n        const strict = options.strict != null ? options.strict : model.schema.options.strict;\n\n        const update = clone(op['updateOne']['update']);\n\n        _addDiscriminatorToObject(schema, op['updateOne']['filter']);\n\n        if (model.schema.$timestamps != null && op['updateOne'].timestamps !== false) {\n          const createdAt = model.schema.$timestamps.createdAt;\n          const updatedAt = model.schema.$timestamps.updatedAt;\n          applyTimestampsToUpdate(now, createdAt, updatedAt, update, {});\n        }\n\n        if (op['updateOne'].timestamps !== false) {\n          applyTimestampsToChildren(now, update, model.schema);\n        }\n\n        const shouldSetDefaultsOnInsert = op['updateOne'].setDefaultsOnInsert == null ?\n          globalSetDefaultsOnInsert :\n          op['updateOne'].setDefaultsOnInsert;\n        if (shouldSetDefaultsOnInsert !== false) {\n          setDefaultsOnInsert(op['updateOne']['filter'], model.schema, update, {\n            setDefaultsOnInsert: true,\n            upsert: op['updateOne'].upsert\n          });\n        }\n\n        decorateUpdateWithVersionKey(\n          update,\n          op['updateOne'],\n          model.schema.options.versionKey\n        );\n\n        op['updateOne']['filter'] = cast(model.schema, op['updateOne']['filter'], {\n          strict: strict,\n          upsert: op['updateOne'].upsert\n        });\n        op['updateOne']['update'] = castUpdate(model.schema, update, {\n          strict: strict,\n          upsert: op['updateOne'].upsert\n        }, model, op['updateOne']['filter']);\n      } catch (error) {\n        return callback(error, null);\n      }\n\n      callback(null);\n    };\n  } else if (op['updateMany']) {\n    return (callback) => {\n      try {\n        if (!op['updateMany']['filter']) {\n          throw new Error('Must provide a filter object.');\n        }\n        if (!op['updateMany']['update']) {\n          throw new Error('Must provide an update object.');\n        }\n\n        const model = decideModelByObject(originalModel, op['updateMany']['filter']);\n        const schema = model.schema;\n        const strict = options.strict != null ? options.strict : model.schema.options.strict;\n\n        const shouldSetDefaultsOnInsert = op['updateMany'].setDefaultsOnInsert == null ?\n          globalSetDefaultsOnInsert :\n          op['updateMany'].setDefaultsOnInsert;\n\n        if (shouldSetDefaultsOnInsert !== false) {\n          setDefaultsOnInsert(op['updateMany']['filter'], model.schema, op['updateMany']['update'], {\n            setDefaultsOnInsert: true,\n            upsert: op['updateMany'].upsert\n          });\n        }\n\n        if (model.schema.$timestamps != null && op['updateMany'].timestamps !== false) {\n          const createdAt = model.schema.$timestamps.createdAt;\n          const updatedAt = model.schema.$timestamps.updatedAt;\n          applyTimestampsToUpdate(now, createdAt, updatedAt, op['updateMany']['update'], {});\n        }\n        if (op['updateMany'].timestamps !== false) {\n          applyTimestampsToChildren(now, op['updateMany']['update'], model.schema);\n        }\n\n        _addDiscriminatorToObject(schema, op['updateMany']['filter']);\n\n        decorateUpdateWithVersionKey(\n          op['updateMany']['update'],\n          op['updateMany'],\n          model.schema.options.versionKey\n        );\n\n        op['updateMany']['filter'] = cast(model.schema, op['updateMany']['filter'], {\n          strict: strict,\n          upsert: op['updateMany'].upsert\n        });\n\n        op['updateMany']['update'] = castUpdate(model.schema, op['updateMany']['update'], {\n          strict: strict,\n          upsert: op['updateMany'].upsert\n        }, model, op['updateMany']['filter']);\n      } catch (error) {\n        return callback(error, null);\n      }\n\n      callback(null);\n    };\n  } else if (op['replaceOne']) {\n    return (callback) => {\n      const model = decideModelByObject(originalModel, op['replaceOne']['filter']);\n      const schema = model.schema;\n      const strict = options.strict != null ? options.strict : model.schema.options.strict;\n\n      _addDiscriminatorToObject(schema, op['replaceOne']['filter']);\n      try {\n        op['replaceOne']['filter'] = cast(model.schema, op['replaceOne']['filter'], {\n          strict: strict,\n          upsert: op['replaceOne'].upsert\n        });\n      } catch (error) {\n        return callback(error, null);\n      }\n\n      // set `skipId`, otherwise we get \"_id field cannot be changed\"\n      const doc = new model(op['replaceOne']['replacement'], strict, true);\n      if (model.schema.options.timestamps) {\n        doc.initializeTimestamps();\n      }\n      if (options.session != null) {\n        doc.$session(options.session);\n      }\n      const versionKey = model?.schema?.options?.versionKey;\n      if (versionKey && doc[versionKey] == null) {\n        doc[versionKey] = 0;\n      }\n      op['replaceOne']['replacement'] = doc;\n\n      if (options.skipValidation || op['replaceOne'].skipValidation) {\n        op['replaceOne']['replacement'] = op['replaceOne']['replacement'].toBSON();\n        callback(null);\n        return;\n      }\n\n      op['replaceOne']['replacement'].$validate().then(\n        () => {\n          op['replaceOne']['replacement'] = op['replaceOne']['replacement'].toBSON();\n          callback(null);\n        },\n        error => {\n          callback(error, null);\n        }\n      );\n    };\n  } else if (op['deleteOne']) {\n    return (callback) => {\n      const model = decideModelByObject(originalModel, op['deleteOne']['filter']);\n      const schema = model.schema;\n\n      _addDiscriminatorToObject(schema, op['deleteOne']['filter']);\n\n      try {\n        op['deleteOne']['filter'] = cast(model.schema,\n          op['deleteOne']['filter']);\n      } catch (error) {\n        return callback(error, null);\n      }\n\n      callback(null);\n    };\n  } else if (op['deleteMany']) {\n    return (callback) => {\n      const model = decideModelByObject(originalModel, op['deleteMany']['filter']);\n      const schema = model.schema;\n\n      _addDiscriminatorToObject(schema, op['deleteMany']['filter']);\n\n      try {\n        op['deleteMany']['filter'] = cast(model.schema,\n          op['deleteMany']['filter']);\n      } catch (error) {\n        return callback(error, null);\n      }\n\n      callback(null);\n    };\n  } else {\n    return (callback) => {\n      const error = new MongooseError(`Invalid op passed to \\`bulkWrite()\\`: ${inspect(op)}`);\n      callback(error, null);\n    };\n  }\n};\n\nfunction _addDiscriminatorToObject(schema, obj) {\n  if (schema == null) {\n    return;\n  }\n  if (schema.discriminatorMapping && !schema.discriminatorMapping.isRoot) {\n    obj[schema.discriminatorMapping.key] = schema.discriminatorMapping.value;\n  }\n}\n\n/**\n * gets discriminator model if discriminator key is present in object\n * @api private\n */\n\nfunction decideModelByObject(model, object) {\n  const discriminatorKey = model.schema.options.discriminatorKey;\n  if (object != null && object.hasOwnProperty(discriminatorKey)) {\n    model = getDiscriminatorByValue(model.discriminators, object[discriminatorKey]) || model;\n  }\n  return model;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}